
spring:
  cloud:
    consul:
      port: 8500
      host: 192.168.160.137
      discovery:
        service-name: ${spring.application.name}
        enabled: true
        register: true
        deregister: false
  application:
    name: gateway
  security:
    oauth2:
      resource-server:
        jwt:
          issuer-uri: http://spring-oauth-server:3000
      client:
        provider:
          custom-issuer:
            #            issuer-uri: http://spring-oauth-server:8080
            issuer-uri: http://spring-oauth-server:3000
            authorizationUri: ${spring.security.oauth2.client.provider.custom-issuer.issuer-uri}/oauth2/authorize
            tokenUri: ${spring.security.oauth2.client.provider.custom-issuer.issuer-uri}/oauth2/token
            jwk-set-uri: ${spring.security.oauth2.client.provider.custom-issuer.issuer-uri}/oauth2/jwks
        registration:
          messaging-client-oidc:
            provider: custom-issuer
            client-name: message-client
            client-id: client-msg
            client-secret: 123456
            client-authentication-method: client_secret_basic
#            client-authentication-method: client_secret_jwt
            authorization-grant-type: authorization_code
            redirect-uri: http://spring-oauth-client:8001/login/oauth2/code/messaging-client-oidc
            scope:
              - profile
              - openid
server:
  port: 8001